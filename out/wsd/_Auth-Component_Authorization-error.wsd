@startuml [Auth Component] Authorization error

set namespaceSeparator ::
skinparam class {
    BackgroundColor<<listen>> HoneyDew
    BackgroundColor<<action>> Wheat
    BackgroundColor<<dispatch>> Technology
}

interface "[Auth Component] Authorization error" << (A,#FF7700) action >> {
            variable: authError
            src: auth.actions
            --
            props<{error: any}>

        }

        
interface "auth.reducer:: authReducer L" << (L,orchid) listen >> {
            name: authError
            action: [Auth Component] Authorization error
            ..
            Variable: authReducer
            __
        }
        "[Auth Component] Authorization error" <.down. "auth.reducer:: authReducer L"

interface "auth.effects:: AuthEffects D" << (D,orchid) dispatch >> {
            name: authError
            action: [Auth Component] Authorization error
            ..
            Class: AuthEffects
Property: signIn$
            __
        }
        "[Auth Component] Authorization error" -down-> "auth.effects:: AuthEffects D"

interface "auth.effects:: AuthEffects D" << (D,orchid) dispatch >> {
            name: authError
            action: [Auth Component] Authorization error
            ..
            Class: AuthEffects
Property: signOut$
            __
        }
        "[Auth Component] Authorization error" -down-> "auth.effects:: AuthEffects D"

interface "fire.effects:: FireEffects D" << (D,orchid) dispatch >> {
            name: authError
            action: [Auth Component] Authorization error
            ..
            Class: FireEffects
Property: checkAdminRole$
            __
        }
        "[Auth Component] Authorization error" -down-> "fire.effects:: FireEffects D"

interface "fire.effects:: FireEffects D" << (D,orchid) dispatch >> {
            name: authError
            action: [Auth Component] Authorization error
            ..
            Class: FireEffects
Property: updateProfile$
            __
        }
        "[Auth Component] Authorization error" -down-> "fire.effects:: FireEffects D"

interface "spinner.effects:: SpinnerEffects L" << (L,orchid) listen >> {
            name: authError
            action: [Auth Component] Authorization error
            ..
            Class: SpinnerEffects
Property: spinneroff$
            __
        }
        "[Auth Component] Authorization error" <.down. "spinner.effects:: SpinnerEffects L"
 

@enduml